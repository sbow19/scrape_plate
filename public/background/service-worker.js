(()=>{"use strict";function e(e){const a=["method","data","type"];for(const t of Object.keys(e))if(!a.includes(t))throw new TypeError("CRUD options have incorrect keys");const{type:t,method:s,data:c}=e;if("string"!=typeof t||!["project","schema","capture"].includes(t))throw new TypeError("CRUD operation data type value incorrect");if("string"!=typeof s||!["create","update","read","delete"].includes(s))throw new TypeError("CRUD operation method value incorrect");!function(e,a){switch(e){case"project":{const e=["name","last_edited","date_created","id","captures"];for(const t of Object.keys(a))if(!e.includes(t))throw new TypeError(`ProjectGroup object does not contain ${t} key`);for(const[e,t]of Object.entries(a))switch(e){case"name":if("string"!=typeof t)throw new TypeError("Project name not a string");if(t.length>20)throw new Error("Project name must be less than 20 characters");break;case"last_edited":if("string"!=typeof t)throw new TypeError("Project last edited not a string");break;case"date_created":if("string"!=typeof t)throw new TypeError("Project created data not a string");break;case"id":if("string"!=typeof t)throw new TypeError("Project id not a string");break;case"captures":if("object"!=typeof t)throw new TypeError("captures not an object")}}break;case"capture":{const e=["name","last_edited","date_created","project_id","id","capture_body","schema_id"];for(const t of Object.keys(a))if(!e.includes(t))throw new TypeError(`Capture object does not contain ${t} key`);for(const[e,t]of Object.entries(a))switch(e){case"name":if("string"!=typeof t)throw new TypeError("Capture  name not a string");if(t.length>20)throw new Error("Capture name must be less than 20 characters");break;case"last_edited":if("string"!=typeof t)throw new TypeError("Capture  last edited not a string");break;case"date_created":if("string"!=typeof t)throw new TypeError("Capture  created data not a string");break;case"id":if("string"!=typeof t)throw new TypeError("Capture id not a string");break;case"capture_body":if("object"!=typeof t)throw new TypeError("captures not an object");Object.values(t).forEach((e=>{if(e.match?.length)throw new Error("Capture matched content must be less than 20 characters")}));break;case"schema_id":if("string"!=typeof t)throw new TypeError("captures schema_id not an string");if(!Object.keys(r._userContentModel.schemas).includes(t))throw new Error("Capture schema id does not exist");break;case"project_id":if("string"!=typeof t)throw new TypeError("captures project_id not an string");if(!Object.values(r._userContentModel.projects).flat().find((e=>{if(e.id===t)return!0})))throw new Error("Capture project id does not exist")}}break;case"schema":{const e=["name","id","url_match","schema"];for(const t of Object.keys(a))if(!e.includes(t))throw new TypeError(`Schema object does not contain ${t} key`);for(const[e,t]of Object.entries(a))switch(e){case"name":if("string"!=typeof t&&null!==t)throw new TypeError("Schema  name not a string or null value");if(t.length>20)throw new Error("Schema name must be less than 20 characters");break;case"id":if("string"!=typeof t)throw new TypeError("Schema id not a string");break;case"schema":if("object"!=typeof t)throw new TypeError("Schema not an object");Object.keys(t).forEach((e=>{if(e.length>12)throw new Error("Schema entry selector must be less than 13 characters")}));break;case"url_match":if("string"!=typeof t)throw new TypeError("Schema url match not a string")}}}}(t,c)}function a(e,a){switch(e){case"database":return{operation:e,data:a};case"otherOperation":return{operation:e,data:{otherField:"",success:!1}};default:throw new TypeError("Message operation type incorrect - e.g. database")}}class t{static init(){t._eventEmitter.subscribe("fetch",t._fetchUserContent),t._eventEmitter.subscribe("getAll",t._returnUserContent),t._eventEmitter.subscribe("getAllOf",t._returnAllOf),t._eventEmitter.subscribe("search",t._returnSearch),t._eventEmitter.subscribe("create",t._createData),t._eventEmitter.subscribe("delete",t._deleteData),t._eventEmitter.subscribe("update",t._updateData),t._eventEmitter.subscribe("set_test_data",t._setTestData)}static async _fetchUserContent(){return new Promise(((e,a)=>{try{e(t._userContentModel)}catch{a({})}}))}static _returnUserContent(){return t._userContentModel}static _returnAllOf(e){return t._userContentModel[e]}static _returnSearch(e){if(!e||!Object.keys(e).includes("term")||!Object.keys(e).includes("type"))throw new Error("Options require a term property and type property");let a=[],{term:r,type:s}=e;if("string"!=typeof r)throw new TypeError("Term must be a string");switch(r=r.toLowerCase(),s){case"project":return a=Object.values(t._userContentModel.projects).filter((e=>!!e.name.toLowerCase().includes(r.toLowerCase())||e.id===r)),a;case"schema":return a=Object.values(t._userContentModel.schemas).filter((e=>!(!e.name||!e.name.toLowerCase().includes(r.toLowerCase()))||e.id===r)),a;case"capture":{const e=Object.values(t._userContentModel.projects);for(const t of e)Object.values(t.captures).forEach((e=>{(e.name&&e.name.toLowerCase().includes(r.toLowerCase())||e.id===r||e.schema_id===r)&&a.push(e)}));return a}default:return null}}static _createData(r){e(r);const s=a("database",r);let c;const n=(new Date).toISOString(),o=crypto.randomUUID();switch(r.type){case"capture":c="captures",r.data.date_created=n,r.data.last_edited=n,r.data.id=o;break;case"project":c="projects",r.data.date_created=n,r.data.last_edited=n,r.data.id=o;break;case"schema":c="schemas",r.data.id=o}return new Promise(((e,a)=>{chrome.runtime.sendMessage(s).then((s=>{s.data.success?("captures"===c?t._userContentModel.projects[r.data.project_id].captures[r.data.id]=r.data:t._userContentModel[c][r.data.id]=r.data,e(s)):s.data.success||a(s)})).catch((e=>a(e)))}))}static _deleteData(e){const r=a("database",e);let s;switch(e.type){case"capture":s="captures";break;case"project":s="projects";break;case"schema":s="schemas"}return new Promise(((a,c)=>{chrome.runtime.sendMessage(r).then((r=>{r.data.success?("captures"===s?delete t._userContentModel.projects[e.data.project_id].captures[e.data.id]:delete t._userContentModel[s][e.data],a(r)):r.data.success||c(r)})).catch((e=>c(e)))}))}static _updateData(r){e(r);const s=a("database",r),c=(new Date).toISOString();let n;switch(r.type){case"capture":n="captures",r.data.last_edited=c;break;case"project":n="projects",r.data.last_edited=c;break;case"schema":n="schemas"}return new Promise(((e,a)=>{chrome.runtime.sendMessage(s).then((s=>{s.data.success?("captures"===n?t._userContentModel.projects[r.data.project_id].captures[r.data.id]=r.data:t._userContentModel[n][r.data.id]=r.data,e(s)):s.data.success||a(s)})).catch((e=>a(e)))}))}static get events(){return t._eventEmitter}static _setTestData(){t._userContentModel=JSON.parse(JSON.stringify(t._testData))}static get testData(){return t._testData}}Object.defineProperty(t,"_eventEmitter",{enumerable:!0,configurable:!0,writable:!0,value:new class{constructor(){Object.defineProperty(this,"_events",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this._events={}}subscribe(e,a){if(this._events[e])throw Error("Listener already attached");return this._events[e]=a,()=>{delete this._events[e]}}emit(e,a){const t=this._events[e],r=JSON.parse(JSON.stringify(a));return new Promise(((e,a)=>{if(t){let s=null;try{s=t.call(null,r)}catch(e){a(e)}if(!s)return void e(s);"function"==typeof s.then?s.then((a=>{e(a)})).catch((e=>{a(e)})):e(s)}else e(null)}))}get events(){return this._events}}}),Object.defineProperty(t,"_testData",{enumerable:!0,configurable:!0,writable:!0,value:{details:{hasUsedOnce:!1,username:"",last_used:"",updateRequired:!0,currentProject:"a11aa111-11aa-1111-a111-1a11a1a1a111"},projects:{"a11aa111-11aa-1111-a111-1a11a1a1a111":{name:"project1",date_created:"2025-01-10T14:30:00",last_edited:"2025-03-13T14:30:00",id:"a11aa111-11aa-1111-a111-1a11a1a1a111",captures:{"c11aa111-11aa-1111-a111-1a11a1a1a111":{id:"c11aa111-11aa-1111-a111-1a11a1a1a111",date_created:"2025-01-11T14:30:00",last_edited:"2025-01-12T14:30:00",project_id:"a11aa111-11aa-1111-a111-1a11a1a1a111",schema_id:"s11aa111-11aa-1111-a111-1a11a1a1a111",name:"capture1",capture_body:{id1:"hello",id2:"world"}},"c11aa111-11aa-1111-a111-1a11a1a1a112":{id:"c11aa111-11aa-1111-a111-1a11a1a1a112",date_created:"2025-01-11T14:30:00",last_edited:"2025-01-12T14:30:00",schema_id:"s11aa111-11aa-1111-a111-1a11a1a1a112",project_id:"a11aa111-11aa-1111-a111-1a11a1a1a111",name:"capture2",capture_body:{id3:"go",id4:"is great"}}}},"a11aa111-11aa-1111-a111-1a11a1a1a112":{name:"project2",date_created:"2024-01-10T14:30:00",last_edited:"2024-03-13T14:30:00",id:"a11aa111-11aa-1111-a111-1a11a1a1a112",captures:{"c11aa111-11aa-1111-a111-1a11a1a1a113":{id:"c11aa111-11aa-1111-a111-1a11a1a1a113",date_created:"2025-01-11T14:30:00",last_edited:"2025-01-12T14:30:00",project_id:"a11aa111-11aa-1111-a111-1a11a1a1a112",schema_id:"s11aa111-11aa-1111-a111-1a11a1a1a111",name:"capture1",capture_body:{id1:"hello",id2:"world"}},"c11aa111-11aa-1111-a111-1a11a1a1a114":{id:"c11aa111-11aa-1111-a111-1a11a1a1a114",date_created:"2025-01-11T14:30:00",last_edited:"2025-01-12T14:30:00",project_id:"a11aa111-11aa-1111-a111-1a11a1a1a112",schema_id:"s11aa111-11aa-1111-a111-1a11a1a1a112",name:"capture2",capture_body:{id3:"go",id4:"is great"}}}}},schemas:{"s11aa111-11aa-1111-a111-1a11a1a1a112":{id:"s11aa111-11aa-1111-a111-1a11a1a1a112",name:"schema2",url_match:"https://www.google.com",schema:{id3:{match:"id3",match_type:"id"},id4:{match:"id4",match_type:"id"}}},"s11aa111-11aa-1111-a111-1a11a1a1a111":{id:"s11aa111-11aa-1111-a111-1a11a1a1a111",name:"schema1",url_match:"https://www.amazon.com",schema:{id1:{match:"id1",match_type:"id"},id2:{match:"id2",match_type:"id"}}}}}});const r=t;r.init()})();